from typing import KeysView, List, Dict
from operator import itemgetter    

def alterarNomeUsuario(listaCadastro:List[Dict[str,str]],nomeAlterado,novoNome):
    for usuario in listaCadastro:
     nome, email = usuario.values()
     if nomeAlterado in email:
        print("O nome do usuário",nome,"foi alternado para",novoNome)
        print("---------------------------------------------------------------------------------------------")
        usuario.update({"nome": novoNome})
        break
    else:
        print("O email",nomeAlterado,"não esta na lista de cadastros")
        print("---------------------------------------------------------------------------------------------")

def removerUsuario(listaCadastro:List[Dict[str,str]],usuarioRemovido):
    for usuario in listaCadastro:
     nome, email = usuario.values()
   
     if usuarioRemovido in email:
         print("O usuário",nome,"com o email",usuarioRemovido,"foi removido da lista de cadastros")
         print("---------------------------------------------------------------------------------------------")
         listaCadastro.remove(usuario)
         break

    else:
        print("O email",usuarioRemovido,"não esta na lista de cadastros")
        print("---------------------------------------------------------------------------------------------")

def verificarUsuario(listaCadastro:List[Dict[str,str]],usuarioBuscado):
    for usuario in listaCadastro:
     nome, email = usuario.values()
     existe=1

     if usuarioBuscado in nome:
         print("O usuário",usuarioBuscado,"esta na lista de cadastros utilizando o email",email)
         print("---------------------------------------------------------------------------------------------")
         existe=0
         break

    if existe == 1:
         print("Ops o usuário",usuarioBuscado,"não esta na lista de cadastros")
         print("---------------------------------------------------------------------------------------------")
         
def ordenarCadastros(listaCadastro): 
    escolha=int(input("Voçe deseja ordernar por\n"
                  "[1] Nome\n"
                  "[2] Email\n"
                  ""))
    print("---------------------------------------------------------------------------------------------")

    while escolha >= 0 and escolha <=3:

     if escolha == 1:
        ordemPorNome = sorted(listaCadastro,key=itemgetter("nome"))
        for nome in ordemPorNome:
         print("Nome",nome["nome"])
         print("Email",nome["email"])
         escolha=-1
        print("---------------------------------------------------------------------------------------------")

     elif escolha == 2:
        ordemPorEmail = sorted(listaCadastro,key=itemgetter("email"))
        for email in ordemPorEmail:
         print("Nome",email["nome"])
         print("Email",email["email"])
         escolha=-1
        print("---------------------------------------------------------------------------------------------")

     else:
         escolha=int(input("Por favor digite somente 1 ou 2:"))
         print("---------------------------------------------------------------------------------------------")
         
def exibirCadastros(listaCadastro:List[Dict[str,str]]):
    for cadastro in listaCadastro:
        nome, email = cadastro.values()
        print("Nome:",nome,"Email:",email)
    print("---------------------------------------------------------------------------------------------")

def novoCadastro():
    novoCadastro = {}
    novoCadastro["nome"] = input("Digite seu nome:")
    novoCadastro["email"] = input("Agora seu email:")
    return novoCadastro
    
def main():

    print("---------------------------------------------------------------------------------------------")
    print("Olá meu nome e Sistema e venho te ajudar a organizar sua lista de inscritos do evento técnico")
    print("---------------------------------------------------------------------------------------------")
    listaCadastro = []
    qtdCadastros = int(input("Você pode me informar quantos cadastros você deseja adicionar a sua lista:"))
    print("---------------------------------------------------------------------------------------------")

    while(qtdCadastros != len(listaCadastro)):
        umcadastro = novoCadastro()
        listaCadastro.append(umcadastro)
        print("---------------------------------------------------------------------------------------------")

    op=1
    while op > 0 or op != 0:

     print('<<<<< Painel de Controle >>>>>\n'
           '[1] Exibir usuários \n'
           '[2] Ordenar os participantes por ordem alfabética\n'
           '[3] Vertificar se o usuário na lista de participantes\n'
           '[4] Remover usuário\n'
           '[5] Alterar nome de um usuário\n'
           '[0] Sair do programa')
     print("---------------------------------------------------------------------------------------------")
     op = int(input('O que você deseja fazer:'))
     print("---------------------------------------------------------------------------------------------")

     if op == 1:
        exibirCadastros(listaCadastro)
     elif op == 2:
        ordenarCadastros(listaCadastro)
     elif op == 3:
        usuarioBuscado = input("Digite o Nome do usuário que voce procura:")
        verificarUsuario(listaCadastro,usuarioBuscado)
     elif op == 4:
        usuarioRemovido = input("Digite o Email do usuário que voce deseja remover:")
        removerUsuario(listaCadastro,usuarioRemovido)
     elif op == 5:
        nomeAlterado = input("Digite o Email do usuário que voce deseja alterar o nome:")
        novoNome = input("Digite o novo Nome que deseja colocar neste email:")
        print("---------------------------------------------------------------------------------------------")
        alterarNomeUsuario(listaCadastro,nomeAlterado,novoNome)
     elif op == 0:
        print("Programa encerrado")
        print("---------------------------------------------------------------------------------------------")
        break
     elif op<0 or op>5:
        print('Opção inválida. Tente novamente!')
        print("---------------------------------------------------------------------------------------------")

if __name__ == "__main__":
    main()
